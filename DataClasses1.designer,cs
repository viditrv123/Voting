#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccessLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DbOvs")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblCandidate(tblCandidate instance);
    partial void UpdatetblCandidate(tblCandidate instance);
    partial void DeletetblCandidate(tblCandidate instance);
    partial void Inserttblvoterprofile(tblvoterprofile instance);
    partial void Updatetblvoterprofile(tblvoterprofile instance);
    partial void Deletetblvoterprofile(tblvoterprofile instance);
    partial void Inserttblvoter(tblvoter instance);
    partial void Updatetblvoter(tblvoter instance);
    partial void Deletetblvoter(tblvoter instance);
    partial void Inserttblvote(tblvote instance);
    partial void Updatetblvote(tblvote instance);
    partial void Deletetblvote(tblvote instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DataAccessLayer.Properties.Settings.Default.DbOvsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblCandidate> tblCandidates
		{
			get
			{
				return this.GetTable<tblCandidate>();
			}
		}
		
		public System.Data.Linq.Table<tblvoterprofile> tblvoterprofiles
		{
			get
			{
				return this.GetTable<tblvoterprofile>();
			}
		}
		
		public System.Data.Linq.Table<tblvoter> tblvoters
		{
			get
			{
				return this.GetTable<tblvoter>();
			}
		}
		
		public System.Data.Linq.Table<tblvote> tblvotes
		{
			get
			{
				return this.GetTable<tblvote>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCandidate")]
	public partial class tblCandidate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CandidateName;
		
		private string _Party;
		
		private string _Symbol;
		
		private string _Constituency;
		
		private System.Nullable<int> _WardNo;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<bool> _IsActive;
		
		private EntitySet<tblvote> _tblvotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCandidateNameChanging(string value);
    partial void OnCandidateNameChanged();
    partial void OnPartyChanging(string value);
    partial void OnPartyChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnConstituencyChanging(string value);
    partial void OnConstituencyChanged();
    partial void OnWardNoChanging(System.Nullable<int> value);
    partial void OnWardNoChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tblCandidate()
		{
			this._tblvotes = new EntitySet<tblvote>(new Action<tblvote>(this.attach_tblvotes), new Action<tblvote>(this.detach_tblvotes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateName", DbType="VarChar(50)")]
		public string CandidateName
		{
			get
			{
				return this._CandidateName;
			}
			set
			{
				if ((this._CandidateName != value))
				{
					this.OnCandidateNameChanging(value);
					this.SendPropertyChanging();
					this._CandidateName = value;
					this.SendPropertyChanged("CandidateName");
					this.OnCandidateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Party", DbType="VarChar(25)")]
		public string Party
		{
			get
			{
				return this._Party;
			}
			set
			{
				if ((this._Party != value))
				{
					this.OnPartyChanging(value);
					this.SendPropertyChanging();
					this._Party = value;
					this.SendPropertyChanged("Party");
					this.OnPartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="VarChar(MAX)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Constituency", DbType="VarChar(50)")]
		public string Constituency
		{
			get
			{
				return this._Constituency;
			}
			set
			{
				if ((this._Constituency != value))
				{
					this.OnConstituencyChanging(value);
					this.SendPropertyChanging();
					this._Constituency = value;
					this.SendPropertyChanged("Constituency");
					this.OnConstituencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardNo", DbType="Int")]
		public System.Nullable<int> WardNo
		{
			get
			{
				return this._WardNo;
			}
			set
			{
				if ((this._WardNo != value))
				{
					this.OnWardNoChanging(value);
					this.SendPropertyChanging();
					this._WardNo = value;
					this.SendPropertyChanged("WardNo");
					this.OnWardNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCandidate_tblvote", Storage="_tblvotes", ThisKey="Id", OtherKey="CandidateId")]
		public EntitySet<tblvote> tblvotes
		{
			get
			{
				return this._tblvotes;
			}
			set
			{
				this._tblvotes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblvotes(tblvote entity)
		{
			this.SendPropertyChanging();
			entity.tblCandidate = this;
		}
		
		private void detach_tblvotes(tblvote entity)
		{
			this.SendPropertyChanging();
			entity.tblCandidate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblvoterprofile")]
	public partial class tblvoterprofile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UserId;
		
		private string _Picture;
		
		private string _Address;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private EntityRef<tblvoter> _tblvoter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    #endregion
		
		public tblvoterprofile()
		{
			this._tblvoter = default(EntityRef<tblvoter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._tblvoter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(MAX)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblvoter_tblvoterprofile", Storage="_tblvoter", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public tblvoter tblvoter
		{
			get
			{
				return this._tblvoter.Entity;
			}
			set
			{
				tblvoter previousValue = this._tblvoter.Entity;
				if (((previousValue != value) 
							|| (this._tblvoter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblvoter.Entity = null;
						previousValue.tblvoterprofiles.Remove(this);
					}
					this._tblvoter.Entity = value;
					if ((value != null))
					{
						value.tblvoterprofiles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblvoter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblvoters")]
	public partial class tblvoter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _VoterId;
		
		private string _Name;
		
		private string _Email;
		
		private System.Nullable<long> _Contact;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private System.Nullable<System.DateTime> _Updt;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<char> _Gender;
		
		private EntitySet<tblvoterprofile> _tblvoterprofiles;
		
		private EntitySet<tblvote> _tblvotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVoterIdChanging(string value);
    partial void OnVoterIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnContactChanging(System.Nullable<long> value);
    partial void OnContactChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    partial void OnUpdtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdtChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    #endregion
		
		public tblvoter()
		{
			this._tblvoterprofiles = new EntitySet<tblvoterprofile>(new Action<tblvoterprofile>(this.attach_tblvoterprofiles), new Action<tblvoterprofile>(this.detach_tblvoterprofiles));
			this._tblvotes = new EntitySet<tblvote>(new Action<tblvote>(this.attach_tblvotes), new Action<tblvote>(this.detach_tblvotes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoterId", DbType="VarChar(15)")]
		public string VoterId
		{
			get
			{
				return this._VoterId;
			}
			set
			{
				if ((this._VoterId != value))
				{
					this.OnVoterIdChanging(value);
					this.SendPropertyChanging();
					this._VoterId = value;
					this.SendPropertyChanged("VoterId");
					this.OnVoterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="BigInt")]
		public System.Nullable<long> Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(16)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updt
		{
			get
			{
				return this._Updt;
			}
			set
			{
				if ((this._Updt != value))
				{
					this.OnUpdtChanging(value);
					this.SendPropertyChanging();
					this._Updt = value;
					this.SendPropertyChanged("Updt");
					this.OnUpdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblvoter_tblvoterprofile", Storage="_tblvoterprofiles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<tblvoterprofile> tblvoterprofiles
		{
			get
			{
				return this._tblvoterprofiles;
			}
			set
			{
				this._tblvoterprofiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblvoter_tblvote", Storage="_tblvotes", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<tblvote> tblvotes
		{
			get
			{
				return this._tblvotes;
			}
			set
			{
				this._tblvotes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblvoterprofiles(tblvoterprofile entity)
		{
			this.SendPropertyChanging();
			entity.tblvoter = this;
		}
		
		private void detach_tblvoterprofiles(tblvoterprofile entity)
		{
			this.SendPropertyChanging();
			entity.tblvoter = null;
		}
		
		private void attach_tblvotes(tblvote entity)
		{
			this.SendPropertyChanging();
			entity.tblvoter = this;
		}
		
		private void detach_tblvotes(tblvote entity)
		{
			this.SendPropertyChanging();
			entity.tblvoter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblvote")]
	public partial class tblvote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _CandidateId;
		
		private System.Nullable<int> _VoteCount;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<System.DateTime> _Crdt;
		
		private EntityRef<tblCandidate> _tblCandidate;
		
		private EntityRef<tblvoter> _tblvoter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnCandidateIdChanging(System.Nullable<int> value);
    partial void OnCandidateIdChanged();
    partial void OnVoteCountChanging(System.Nullable<int> value);
    partial void OnVoteCountChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnCrdtChanging(System.Nullable<System.DateTime> value);
    partial void OnCrdtChanged();
    #endregion
		
		public tblvote()
		{
			this._tblCandidate = default(EntityRef<tblCandidate>);
			this._tblvoter = default(EntityRef<tblvoter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._tblvoter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int")]
		public System.Nullable<int> CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					if (this._tblCandidate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidateIdChanging(value);
					this.SendPropertyChanging();
					this._CandidateId = value;
					this.SendPropertyChanged("CandidateId");
					this.OnCandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteCount", DbType="Int")]
		public System.Nullable<int> VoteCount
		{
			get
			{
				return this._VoteCount;
			}
			set
			{
				if ((this._VoteCount != value))
				{
					this.OnVoteCountChanging(value);
					this.SendPropertyChanging();
					this._VoteCount = value;
					this.SendPropertyChanged("VoteCount");
					this.OnVoteCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Crdt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Crdt
		{
			get
			{
				return this._Crdt;
			}
			set
			{
				if ((this._Crdt != value))
				{
					this.OnCrdtChanging(value);
					this.SendPropertyChanging();
					this._Crdt = value;
					this.SendPropertyChanged("Crdt");
					this.OnCrdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCandidate_tblvote", Storage="_tblCandidate", ThisKey="CandidateId", OtherKey="Id", IsForeignKey=true)]
		public tblCandidate tblCandidate
		{
			get
			{
				return this._tblCandidate.Entity;
			}
			set
			{
				tblCandidate previousValue = this._tblCandidate.Entity;
				if (((previousValue != value) 
							|| (this._tblCandidate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCandidate.Entity = null;
						previousValue.tblvotes.Remove(this);
					}
					this._tblCandidate.Entity = value;
					if ((value != null))
					{
						value.tblvotes.Add(this);
						this._CandidateId = value.Id;
					}
					else
					{
						this._CandidateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblCandidate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblvoter_tblvote", Storage="_tblvoter", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public tblvoter tblvoter
		{
			get
			{
				return this._tblvoter.Entity;
			}
			set
			{
				tblvoter previousValue = this._tblvoter.Entity;
				if (((previousValue != value) 
							|| (this._tblvoter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblvoter.Entity = null;
						previousValue.tblvotes.Remove(this);
					}
					this._tblvoter.Entity = value;
					if ((value != null))
					{
						value.tblvotes.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblvoter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
